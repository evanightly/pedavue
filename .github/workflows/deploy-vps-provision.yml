name: Provision VPS Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: vps-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REMOTE_APP_DIR: ${{ secrets.VPS_APP_DIR }}
      VPS_SERVER_NAME: ${{ secrets.VPS_SERVER_NAME }}
      REPO_NAME: ${{ github.event.repository.name }}
      VPS_WEB_USER: ${{ secrets.VPS_WEB_USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare deployment payload
        env:
          SECRET_ENV: ${{ secrets.VPS_ENV_PRODUCTION }}
        shell: bash
        run: |
          set -euo pipefail

          DEPLOY_DIR="deploy-vps"
          rm -rf "${DEPLOY_DIR}"
          mkdir -p "${DEPLOY_DIR}"

          rsync -a --delete \
            --exclude '.git/' \
            --exclude '.github/' \
            --exclude 'deploy-vps/' \
            --exclude 'node_modules/' \
            --exclude 'vendor/' \
            --exclude 'storage/app/public/' \
            ./ "${DEPLOY_DIR}/"

          if [[ -z "${SECRET_ENV}" ]]; then
            echo 'Missing secret VPS_ENV_PRODUCTION with your production .env contents.' >&2
            exit 1
          fi

          printf '%s\n' "${SECRET_ENV}" > "${DEPLOY_DIR}/.env"
          chmod 600 "${DEPLOY_DIR}/.env" || true

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.VPS_SSH_KNOWN_HOSTS }}
        shell: bash
        run: |
          set -euo pipefail
          install -m 700 -d ~/.ssh
          printf '%s\n' "${SSH_PRIVATE_KEY}" > ~/.ssh/vps_deploy_key
          chmod 600 ~/.ssh/vps_deploy_key
          if [[ -n "${SSH_KNOWN_HOSTS:-}" ]]; then
            printf '%s\n' "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
          else
            touch ~/.ssh/known_hosts
          fi

      - name: Ensure remote workspace
        env:
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        shell: bash
        run: |
          set -euo pipefail

          if [[ -z "${SSH_HOST}" || -z "${SSH_USER}" ]]; then
            echo 'Missing SSH host and/or user secrets.' >&2
            exit 1
          fi

          DEFAULT_DIR="/var/www/${REPO_NAME:-pedavue}"
          REMOTE_DIR="${REMOTE_APP_DIR:-${DEFAULT_DIR}}"
          if [[ -z "${SSH_PORT}" ]]; then
            SSH_PORT=22
          fi

          ssh -i ~/.ssh/vps_deploy_key -p "${SSH_PORT}" -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" \
            "TARGET_DIR='${REMOTE_DIR}' bash -s" <<'EOSH'
            set -euo pipefail

            if command -v sudo >/dev/null 2>&1; then
              sudo mkdir -p "$TARGET_DIR"
              sudo chown -R "$(whoami)":"$(whoami)" "$TARGET_DIR"
            else
              mkdir -p "$TARGET_DIR"
            fi
          EOSH

      - name: Upload application tree
        env:
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        shell: bash
        run: |
          set -euo pipefail

          DEFAULT_DIR="/var/www/${REPO_NAME:-pedavue}"
          REMOTE_DIR="${REMOTE_APP_DIR:-${DEFAULT_DIR}}"
          if [[ -z "${SSH_HOST}" || -z "${SSH_USER}" ]]; then
            echo 'Missing SSH host and/or user secrets.' >&2
            exit 1
          fi

          if [[ -z "${SSH_PORT}" ]]; then
            SSH_PORT=22
          fi

          RSYNC_SSH="ssh -i ~/.ssh/vps_deploy_key -p ${SSH_PORT} -o StrictHostKeyChecking=no"

          rsync -az --delete \
            --exclude 'storage/app/public/' \
            -e "${RSYNC_SSH}" \
            deploy-vps/ \
            "${SSH_USER}@${SSH_HOST}:${REMOTE_DIR}/"

      - name: Provision application on VPS
        env:
          SSH_HOST: ${{ secrets.VPS_SSH_HOST }}
          SSH_USER: ${{ secrets.VPS_SSH_USER }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT }}
        shell: bash
        run: |
          set -euo pipefail

          DEFAULT_DIR="/var/www/${REPO_NAME:-pedavue}"
          REMOTE_DIR="${REMOTE_APP_DIR:-${DEFAULT_DIR}}"
          if [[ -z "${SSH_HOST}" || -z "${SSH_USER}" ]]; then
            echo 'Missing SSH host and/or user secrets.' >&2
            exit 1
          fi

          if [[ -z "${SSH_PORT}" ]]; then
            SSH_PORT=22
          fi

          ssh -tt -i ~/.ssh/vps_deploy_key -p "${SSH_PORT}" -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" \
            "set -euo pipefail; cd \"${REMOTE_DIR}\"; chmod +x scripts/deploy.sh; SERVER_NAME='${VPS_SERVER_NAME:-_}' WEB_USER='${VPS_WEB_USER:-www-data}' ./scripts/deploy.sh"

      - name: Migration reminder
        shell: bash
        run: |
          echo 'Deployment finished. Remember to run php artisan migrate --force manually on the VPS when ready.'
